{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","keys.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","media/images/giphy.png","App.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","className","id","value","type","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","role","App","defaultCategories","giphy","style","width","href","rel","i","icon","faGithub","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed6c50ad.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories((categories) => [inputValue, ...categories]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group mt-4\">\n        <input\n          id=\"inputValue\"\n          className=\"form-control form-control-lg\"\n          value={inputValue}\n          type=\"text\"\n          onChange={handleInputChange}\n          placeholder=\"Insert the category\"\n        />\n      </div>\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import { API_KEY } from \"../keys\";\n\nexport const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=${API_KEY}`;\n\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((gif) => {\n    return {\n      id: gif?.id,\n      title: gif?.title,\n      url: gif?.images?.downsized_medium?.url,\n    };\n  });\n\n  return gifs;\n};\n","export const API_KEY = `TTuCWRFI5dJ2N8uYSRvomNWWDvUtPbv6`","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"col mb-4\">\n      <div className=\"card h-100 border-secondary animate__animated animate__fadeIn\">\n        <img className=\"card-img-top\" src={url} alt={title} />\n        <div className=\"card-body\">\n          <h4>{title}</h4>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nGifGridItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default GifGridItem;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGrid = ({ category }) => {\n  const { data: gifs, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <hr />\n      <div className=\"col-12 text-center mb-4\">\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      </div>\n\n      {loading && (\n        <div className=\"col\">\n          <div className=\"text-center\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"row row-cols-1 row-cols-md-3\">\n        {gifs.map((gif) => (\n          <GifGridItem key={gif.id} {...gif} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default GifGrid;\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifs(category).then((gifs) => {\n      setState({\n        data: gifs,\n        loading:false\n      })\n    })\n  }, [category]);\n\n  return state;\n}","export default __webpack_public_path__ + \"static/media/giphy.5bb9d18f.png\";","import { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\nimport giphy from \"./media/images/giphy.png\";\n\nconst App = ({ defaultCategories = [] }) => {\n  const [categories, setCategories] = useState(defaultCategories);\n\n  return (\n    <div className=\"container p-5 mb-5\">\n      <div className=\"animate__animated animate__fadeInUp\">\n        <div className=\"row\">\n          <div className=\"mx-auto\">\n            <div className=\"text-center\">\n              <h1>GifExpertApp</h1>\n              <p>Gifs by</p>\n              <img src={giphy} alt=\"giphy logo\" style={{ width: \"200px\" }} />\n              <p className=\"mt-3\">\n                Source Information:{\" \"}\n                <a\n                  href=\"https://www.udemy.com/course/react-cero-experto/\"\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                >\n                  Fernando Herrera. Udemy's Course\n                </a>\n              </p>\n              <p>\n                <strong>Built by: Alonso Parra</strong>\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <AddCategory setCategories={setCategories} />\n\n        {categories.map((category, i) => (\n          <GifGrid key={i} category={category} />\n        ))}\n      </div>\n\n      <nav className=\"navbar fixed-bottom navbar-dark bg-dark text-white custom-footer\">\n        <div className=\"mx-auto\">\n          <div className=\"d-flex flex-row justify-align-content-center align-items-center\">\n            <p className=\"text-center\">\n              Check the code on my Github repository\n            </p>\n            <p className=\"text-center\">\n              <a\n                href=\"https://github.com/alonsogchparra/gif-expert-app-react\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"mx-2\"\n              >\n                {\" \"}\n                <i>\n                  <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n                </i>\n              </a>{\" \"}\n            </p>\n            <p className=\"text-center\">\n              Copyright &copy; 2021 El Vigía. Mérida. Venezuela\n            </p>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"animate.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}